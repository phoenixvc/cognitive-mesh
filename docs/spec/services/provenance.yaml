paths:
  /provenance/records:
    post:
      summary: Create a new provenance record
      description: Records the origin and history of a data item or resource
      operationId: createProvenanceRecord
      tags:
        - Provenance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvenanceRecordCreate'
      responses:
        '201':
          description: Provenance record created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvenanceRecord'
        '400':
          $ref: '#/components/responses/BadRequest'

    get:
      summary: Query provenance records
      description: >
        Retrieves provenance records with filtering and pagination options.
        Supports querying by entity, activity, or agent.
      operationId: queryProvenanceRecords
      tags:
        - Provenance
      parameters:
        - $ref: '#/components/parameters/PaginationQuery'
        - name: entityId
          in: query
          description: Filter by entity ID
          schema:
            type: string
            format: uuid
        - name: activityType
          in: query
          description: Filter by activity type
          schema:
            type: string
        - name: agentId
          in: query
          description: Filter by agent ID
          schema:
            type: string
            format: uuid
        - name: startTime
          in: query
          description: Filter records after this timestamp
          schema:
            type: string
            format: date-time
        - name: endTime
          in: query
          description: Filter records before this timestamp
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProvenanceRecord'

  /provenance/records/{recordId}:
    get:
      summary: Get provenance record by ID
      description: Retrieves a specific provenance record by its unique identifier
      operationId: getProvenanceRecord
      tags:
        - Provenance
      parameters:
        - name: recordId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvenanceRecordDetails'
        '404':
          $ref: '#/components/responses/NotFound'

  /provenance/lineage/{entityId}:
    get:
      summary: Get lineage for an entity
      description: >
        Retrieves the complete lineage of an entity, showing its full provenance history
        and relationships with other entities and activities.
      operationId: getEntityLineage
      tags:
        - Provenance
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: depth
          in: query
          description: Maximum depth of the lineage graph to return
          schema:
            type: integer
            minimum: 1
            maximum: 10
            default: 3
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineageGraph'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    ProvenanceRecordCreate:
      type: object
      required:
        - entity
        - activity
        - agent
      properties:
        entity:
          $ref: '#/components/schemas/Entity'
        activity:
          $ref: '#/components/schemas/Activity'
        agent:
          $ref: '#/components/schemas/Agent'
        startTime:
          type: string
          format: date-time
          description: When the activity started (defaults to current time if not provided)
        endTime:
          type: string
          format: date-time
          description: When the activity ended (for completed activities)
        wasInformedBy:
          type: array
          items:
            type: string
            format: uuid
          description: IDs of prior activities that informed this one
        qualifiedInfluence:
          type: array
          items:
            $ref: '#/components/schemas/Influence'
        metadata:
          type: object
          additionalProperties: true
          description: Additional context-specific metadata

    ProvenanceRecord:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        entity:
          $ref: '#/components/schemas/Entity'
        activity:
          $ref: '#/components/schemas/Activity'
        agent:
          $ref: '#/components/schemas/Agent'
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
          nullable: true
        wasInformedBy:
          type: array
          items:
            type: string
            format: uuid
        qualifiedInfluence:
          type: array
          items:
            $ref: '#/components/schemas/Influence'
        metadata:
          type: object
          additionalProperties: true
        recordedAt:
          type: string
          format: date-time
        recordedBy:
          type: string
          format: uuid

    ProvenanceRecordDetails:
      allOf:
        - $ref: '#/components/schemas/ProvenanceRecord'
        - type: object
          properties:
            lineage:
              $ref: '#/components/schemas/LineageGraph'
            relatedRecords:
              type: array
              items:
                $ref: '#/components/schemas/ProvenanceRecord'

    Entity:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          example: "dataset"
        name:
          type: string
        description:
          type: string
        attributes:
          type: object
          additionalProperties: true

    Activity:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          example: "data_processing"
        description:
          type: string
        method:
          type: string
        parameters:
          type: object
          additionalProperties: true

    Agent:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [user, service, organization, algorithm]
        name:
          type: string
        role:
          type: string

    Influence:
      type: object
      required:
        - entity
        - role
      properties:
        entity:
          $ref: '#/components/schemas/Entity'
        role:
          type: string
          example: "input"
        influenceType:
          type: string
          example: "derivation"

    LineageGraph:
      type: object
      properties:
        nodes:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/LineageNodeEntity'
              - $ref: '#/components/schemas/LineageNodeActivity'
              - $ref: '#/components/schemas/LineageNodeAgent'
        edges:
          type: array
          items:
            $ref: '#/components/schemas/LineageEdge'

    LineageNodeEntity:
      type: object
      required:
        - id
        - type
        - label
      properties:
        id:
          type: string
        type:
          type: string
          const: "entity"
        label:
          type: string
        entityType:
          type: string
        metadata:
          type: object
          additionalProperties: true

    LineageNodeActivity:
      type: object
      required:
        - id
        - type
        - label
      properties:
        id:
          type: string
        type:
          type: string
          const: "activity"
        label:
          type: string
        activityType:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
          nullable: true

    LineageNodeAgent:
      type: object
      required:
        - id
        - type
        - label
      properties:
        id:
          type: string
        type:
          type: string
          const: "agent"
        label:
          type: string
        agentType:
          type: string

    LineageEdge:
      type: object
      required:
        - source
        - target
        - type
      properties:
        source:
          type: string
        target:
          type: string
        type:
          type: string
          enum: [used, wasGeneratedBy, wasAssociatedWith, wasInformedBy, wasDerivedFrom, wasAttributedTo, actedOnBehalfOf]
        role:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
          nullable: true
